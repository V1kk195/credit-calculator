{"version":3,"sources":["utils/formulas.js","components/form/Form.js","components/results/Results.js","components/App.js","index.js"],"names":["countInitialCost","cost","percent","Form","props","className","onSubmit","htmlFor","value","displayType","thousandSeparator","isNumericString","onValueChange","onCostChange","placeholder","id","initialCost","onInitCostChange","onKeyUp","handleInitCostKeyUp","percentsArr","map","item","type","percentClickedState","onClick","onPercentChange","data-testid","period","onPeriodChange","interestRate","onInterestChange","onClear","Results","monthlyPayment","decimalScale","requiredIncome","overPayment","loanAmount","App","React","useState","localStorage","getItem","setCost","setInitialCost","setPeriod","setInterestRate","countLoanAmount","result","isNaN","countMonthlyPayment","countRequiredIncome","countOverpayment","percentActive","setPercentActive","useEffect","values","e","preventDefault","setItem","clear","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.116b195b.chunk.js","sourcesContent":["const countLoanAmount = (cost, initialCost) => {\n    return (cost - initialCost);\n}\n\nconst countMonthlyPayment = (loanAmount, interestRate, period) => {\n    let result = ( loanAmount * ( (interestRate / 1200) + ( (interestRate / 1200) / (((1 + (interestRate / 1200)) ** (period*12)) - 1) ) ) );\n    return isNaN(result) ? 0 : result;\n}\n\nconst countRequiredIncome = (monthlyPayment) => {\n    return ( 5 * (monthlyPayment / 3) );\n}\n\nconst countOverpayment = (monthlyPayment, period,  loanAmount) => {\n    return ( monthlyPayment * period * 12 - loanAmount );\n}\n\n/* exported countInitialCost */\nconst countInitialCost = (cost, percent) => {\n    return (cost * percent / 100);\n}\n\nexport { countLoanAmount, countMonthlyPayment, countRequiredIncome, countOverpayment, countInitialCost };\n","import React from 'react';\nimport NumberFormat from \"react-number-format\";\nimport './Form.css';\n\nfunction Form(props) {\n\n    return (\n        <form className=\"form\" onSubmit={props.onSubmit} >\n            <div className=\"form__block\">\n                <label htmlFor=\"cost\" className=\"form__text\">Стоимость недвижимости</label>\n                <NumberFormat value={props.cost} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onCostChange} className=\"form__input\" placeholder=\"10 000 000\"\n                              id=\"cost\" />\n                <span className=\"form__symbol\">&#8381;</span>\n            </div>\n            <div className=\"form__block\">\n                <label htmlFor=\"initialCost\" className=\"form__text\">Первоначальный взнос</label>\n                <NumberFormat value={props.initialCost} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onInitCostChange} className=\"form__input\" placeholder=\"2 000 000\"\n                              id=\"initialCost\" onKeyUp={props.handleInitCostKeyUp} />\n                <span className=\"form__symbol\">&#8381;</span>\n                <div className=\"form__percents\">\n                    { props.percentsArr.map(item => {\n                        return <button key={item} type=\"button\"\n                                       className={`percent-button ${props.percentClickedState == item && 'percent-button_active'}`}\n                                       value={item} onClick={props.onPercentChange} data-testid={item}>{item} %</button>\n                    }) }\n                </div>\n            </div>\n            <div className=\"form__block\">\n                <label htmlFor=\"period\" className=\"form__text\">Срок кредита</label>\n                <NumberFormat value={props.period} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onPeriodChange} className=\"form__input\" placeholder=\"10\"\n                              id=\"period\" />\n                <span className=\"form__symbol\">лет</span>\n            </div>\n            <div className=\"form__block\">\n                <label htmlFor=\"interestRate\" className=\"form__text\">Процентная ставка</label>\n                <NumberFormat value={props.interestRate} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onInterestChange} className=\"form__input\" placeholder=\"10\"\n                              id=\"interestRate\" />\n                <span className=\"form__symbol\">&#37;</span>\n            </div>\n            <div className=\"form__buttons\">\n                <button type=\"submit\" className=\"form__submit button\">Save</button>\n                <button type=\"button\" className=\"form__clear button\" onClick={props.onClear}>Clear</button>\n            </div>\n        </form>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport NumberFormat from \"react-number-format\";\nimport './Results.css';\n\nfunction Results(props) {\n    return (\n        <div className=\"results\">\n            <div>\n                <span>Ежемесячный платёж</span>\n                <p className=\"results__number results__payment\">{\n                    <NumberFormat value={props.monthlyPayment} decimalScale={0} displayType={'text'} thousandSeparator={' '} isNumericString={true} />\n                } &#8381;</p>\n            </div>\n            <div>\n                <span>Необходимый доход</span>\n                <p className=\"results__number results__income\">{\n                    <NumberFormat value={props.requiredIncome} decimalScale={0} displayType={'text'} thousandSeparator={' '} isNumericString={true} />\n                } &#8381;</p>\n            </div>\n            <div>\n                <span>Переплата</span>\n                <p className=\"results__number results__overpayment\">{\n                    <NumberFormat value={props.overPayment} decimalScale={0} displayType={'text'} thousandSeparator={' '} isNumericString={true} />\n                } &#8381;</p>\n            </div>\n            <div>\n                <span>Тело кредита</span>\n                <p className=\"results__number results__loan-amount\">{\n                    <NumberFormat value={props.loanAmount} decimalScale={0} displayType={'text'} thousandSeparator={' '} isNumericString={true} />\n                } &#8381;</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Results;","import React from 'react';\nimport './App.css';\n\nimport { countLoanAmount, countMonthlyPayment, countRequiredIncome, countOverpayment, countInitialCost }\n        from \"../utils/formulas\";\nimport Form from \"./form/Form\";\nimport Results from \"./results/Results\";\n\nfunction App() {\n    const [cost, setCost] = React.useState(localStorage.getItem('cost') || '');\n    const [initialCost, setInitialCost] = React.useState(localStorage.getItem('initialCost') || '');\n    const [period, setPeriod] = React.useState(localStorage.getItem('period') || '');\n    const [interestRate, setInterestRate] = React.useState(localStorage.getItem('interestRate') || '');\n\n    const loanAmount = countLoanAmount(cost, initialCost);\n    const monthlyPayment = countMonthlyPayment(loanAmount, interestRate, period);\n    const requiredIncome = countRequiredIncome(monthlyPayment);\n    const overPayment = countOverpayment(monthlyPayment, period, loanAmount);\n\n    const percentsArr = [10, 15, 20, 25, 30];\n    const [percentActive, setPercentActive] = React.useState(null);\n\n\n    const handleCostChange = (values) => {\n        const {value} = values;\n        setCost(value);\n    }\n\n    const handleInitialCostChange = (values) => {\n        const {value} = values;\n        setInitialCost(value);\n    }\n\n    const handleInitCostKeyUp = () => {\n        setPercentActive(null);\n    }\n\n    const handlePeriodChange = (values) => {\n        const {value} = values;\n        setPeriod(value);\n    }\n\n    const handleInterestRateChange = (values) => {\n        const {value} = values;\n        setInterestRate(value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        localStorage.setItem('cost', cost);\n        localStorage.setItem('initialCost', initialCost);\n        localStorage.setItem('period', period);\n        localStorage.setItem('interestRate', interestRate);\n    }\n\n    const handleClear = () => {\n        localStorage.clear();\n        setCost('');\n        setInitialCost('');\n        setPeriod('');\n        setInterestRate('');\n    }\n\n    const handlePercentClick = (e) => {\n        if(percentActive === e.target.value) {\n            setPercentActive(null);\n            return;\n        }\n        e.preventDefault();\n        setInitialCost(countInitialCost(cost, e.target.value));\n        setPercentActive(e.target.value);\n    }\n\n    React.useEffect(() => {\n        if(percentActive) {\n            setInitialCost(countInitialCost(cost, percentActive));\n        }\n    }, [cost, percentActive])\n\n    return (\n        <div className=\"container\">\n\n            <Form onCostChange={handleCostChange} onInitCostChange={handleInitialCostChange} onPeriodChange={handlePeriodChange}\n                onInterestChange={handleInterestRateChange} onSubmit={handleSubmit} onClear={handleClear}\n                onPercentChange={handlePercentClick} percentsArr={percentsArr} percentClickedState={percentActive}\n                cost={cost} initialCost={initialCost} period={period}\n                interestRate={interestRate} handleInitCostKeyUp={handleInitCostKeyUp} />\n\n            <Results loanAmount={loanAmount} monthlyPayment={monthlyPayment} requiredIncome={requiredIncome}\n                     overPayment={overPayment} />\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
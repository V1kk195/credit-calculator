[{"/Users/v.fedotkina/Documents/credit-calculator/src/index.js":"1","/Users/v.fedotkina/Documents/credit-calculator/src/components/App.js":"2","/Users/v.fedotkina/Documents/credit-calculator/src/components/results/Results.js":"3","/Users/v.fedotkina/Documents/credit-calculator/src/utils/formulas.js":"4","/Users/v.fedotkina/Documents/credit-calculator/src/components/form/Form.js":"5"},{"size":232,"mtime":1608470344329,"results":"6","hashOfConfig":"7"},{"size":3259,"mtime":1608476893305,"results":"8","hashOfConfig":"7"},{"size":1586,"mtime":1608470344329,"results":"9","hashOfConfig":"7"},{"size":782,"mtime":1608476650295,"results":"10","hashOfConfig":"7"},{"size":3049,"mtime":1608476893306,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1om6cew",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},"/Users/v.fedotkina/Documents/credit-calculator/src/index.js",[],"/Users/v.fedotkina/Documents/credit-calculator/src/components/App.js",[],"/Users/v.fedotkina/Documents/credit-calculator/src/components/results/Results.js",[],["24","25"],"/Users/v.fedotkina/Documents/credit-calculator/src/utils/formulas.js",[],"/Users/v.fedotkina/Documents/credit-calculator/src/components/form/Form.js",["26"],"import React from 'react';\nimport NumberFormat from \"react-number-format\";\nimport './Form.css';\n\nfunction Form(props) {\n    const percentsArr = [10, 15, 20, 25, 30];\n    const [percentActive, setPercentActive] = React.useState(null);\n\n    const handlePercentClick = (e) => {\n        props.onPercentChange(e);\n        setPercentActive(e.target.value);\n    }\n\n    return (\n        <form className=\"form\" onSubmit={props.onSubmit} >\n            <div className=\"form__block\">\n                <label htmlFor=\"cost\" className=\"form__text\">Стоимость недвижимости</label>\n                <NumberFormat value={props.cost} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onCostChange} className=\"form__input\" placeholder=\"10 000 000\"\n                              id=\"cost\" />\n                <span className=\"form__symbol\">&#8381;</span>\n            </div>\n            <div className=\"form__block\">\n                <label htmlFor=\"initialCost\" className=\"form__text\">Первоначальный взнос</label>\n                <NumberFormat value={props.initialCost} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onInitCostChange} className=\"form__input\" placeholder=\"2 000 000\"\n                              id=\"initialCost\" />\n                <span className=\"form__symbol\">&#8381;</span>\n                <div className=\"form__percents\">\n                    { percentsArr.map(item => {\n                        return <button key={item} className={`percent-button ${percentActive == item && 'percent-button_active'}`}\n                                       value={item} onClick={handlePercentClick} data-testid={item}>{item} %</button>\n                    }) }\n                </div>\n            </div>\n            <div className=\"form__block\">\n                <label htmlFor=\"period\" className=\"form__text\">Срок кредита</label>\n                <NumberFormat value={props.period} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onPeriodChange} className=\"form__input\" placeholder=\"10\"\n                              id=\"period\" />\n                <span className=\"form__symbol\">лет</span>\n            </div>\n            <div className=\"form__block\">\n                <label htmlFor=\"interestRate\" className=\"form__text\">Процентная ставка</label>\n                <NumberFormat value={props.interestRate} displayType={'input'} thousandSeparator={' '} isNumericString={true}\n                              onValueChange={props.onInterestChange} className=\"form__input\" placeholder=\"10\"\n                              id=\"interestRate\" />\n                <span className=\"form__symbol\">&#37;</span>\n            </div>\n            <div className=\"form__buttons\">\n                <button type=\"submit\" className=\"form__submit button\">Save</button>\n                <button type=\"button\" className=\"form__clear button\" onClick={props.onClear}>Clear</button>\n            </div>\n        </form>\n    );\n}\n\nexport default Form;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":25,"column":95,"nodeType":"33","messageId":"34","endLine":25,"endColumn":97},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]